name: GH Actions CI

on:
  push:
    branches:
      # Pattern order matters: the last matching inclusion/exclusion wins
      - 'main'
      # We don't want to run CI on branches for dependabot, just on the PR.
      - '!dependabot/**'
  pull_request:
    branches:
      - 'main'
      # Ignore dependabot PRs that are not just about build dependencies or workflows;
      # we'll reject such PRs and send one ourselves.
      - '!dependabot/**'
      - 'dependabot/maven/build-dependencies-**'
      - 'dependabot/github_actions/workflow-actions-**'

permissions: { } # none

# See https://github.com/hibernate/hibernate-orm/pull/4615 for a description of the behavior we're getting.
concurrency:
  # Consider that two builds are in the same concurrency group (cannot run concurrently)
  # if they use the same workflow and are about the same branch ("ref") or pull request.
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  # Cancel previous builds in the same concurrency group even if they are in progress
  # for pull requests or pushes to forks (not the upstream repository).
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'loiclefevre/hibernate-orm-dem' }}

jobs:

  # Job for builds on Oracle Test Pilot infrastructure.
  # This is untrusted, even for pushes, see below.
  testpilot:
    permissions:
      contents: read
    name: GraalVM 21 - ${{matrix.rdbms}}
    runs-on: [ self-hosted, Linux, X64, OCI ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - rdbms: autonomous-transaction-processing-serverless
          - rdbms: base-database-service-19c
          - rdbms: base-database-service-21c
          - rdbms: base-database-service-23ai
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
#      - name: Reclaim disk space and sanitize user home
#        run: .github/ci-prerequisites-atlas.sh
#      - name: Start database
#        env:
#          RDBMS: ${{ matrix.rdbms }}
#          RUNID: ${{ github.run_number }}
#        run: ci/database-start.sh

      - name: Set up Java 21
        uses: graalvm/setup-graalvm@aafbedb8d382ed0ca6167d3a051415f20c859274 # v1.2.8
        with:
          distribution: 'graalvm'
          java-version: '21'

      - name: Generate cache key
        id: cache-key
        run: |
          CURRENT_BRANCH="${{ github.repository != 'loiclefevre/hibernate-orm-dem' && 'fork' || github.base_ref || github.ref_name }}"
          CURRENT_MONTH=$(/bin/date -u "+%Y-%m")
          CURRENT_DAY=$(/bin/date -u "+%d")
          ROOT_CACHE_KEY="buildtool-cache-atlas"
          echo "buildtool-monthly-cache-key=${ROOT_CACHE_KEY}-${CURRENT_MONTH}" >> $GITHUB_OUTPUT
          echo "buildtool-monthly-branch-cache-key=${ROOT_CACHE_KEY}-${CURRENT_MONTH}-${CURRENT_BRANCH}" >> $GITHUB_OUTPUT
          echo "buildtool-cache-key=${ROOT_CACHE_KEY}-${CURRENT_MONTH}-${CURRENT_BRANCH}-${CURRENT_DAY}" >> $GITHUB_OUTPUT
      - name: Cache Maven/Gradle Dependency/Dist Caches
        id: cache-maven
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        # if it's not a pull request, we restore and save the cache
        if: github.event_name != 'pull_request'
        with:
          path: |
            ~/.m2/repository/
            ~/.m2/wrapper/
            ~/.gradle/caches/modules-2
            ~/.gradle/wrapper/
          # A new cache will be stored daily. After that first store of the day, cache save actions will fail because the cache is immutable but it's not a problem.
          # The whole cache is dropped monthly to prevent unlimited growth.
          # The cache is per branch but in case we don't find a branch for a given branch, we will get a cache from another branch.
          key: ${{ steps.cache-key.outputs.buildtool-cache-key }}
          restore-keys: |
            ${{ steps.cache-key.outputs.buildtool-monthly-branch-cache-key }}-
            ${{ steps.cache-key.outputs.buildtool-monthly-cache-key }}-
      - name: Restore Maven/Gradle Dependency/Dist Caches
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        # if it a pull request, we restore the cache but we don't save it
        if: github.event_name == 'pull_request'
        with:
          path: |
            ~/.m2/repository/
            ~/.m2/wrapper/
            ~/.gradle/caches/modules-2
            ~/.gradle/wrapper/
          key: ${{ steps.cache-key.outputs.buildtool-cache-key }}
          restore-keys: |
            ${{ steps.cache-key.outputs.buildtool-monthly-branch-cache-key }}-
            ${{ steps.cache-key.outputs.buildtool-monthly-cache-key }}-

      - id: create_database
        #if: steps.build_guard.outputs.skip_tests == 'no'
        uses: loiclefevre/test@v1.0.14
        with:
          oci-service: ${{ matrix.rdbms }}
          action: create
          user: hibernate_orm_test

      - name: Run build script
        env:
          RDBMS: ${{ matrix.rdbms }}
          RUNID: ${{ github.run_number }}
          TESTPILOT_CONNECTION_STRING_SUFFIX: ${{ steps.create_database.outputs.connection_string_suffix }}
          TESTPILOT_PASSWORD: ${{ steps.create_database.outputs.database_password }}
          API_HOST: ""
          TESTPILOT_CLIENT_ID: ""
          TESTPILOT_TOKEN: ""
          # Needed for TFO (TCP fast open)
          LD_PRELOAD: /home/ubuntu/libtfojdbc1.so
          LD_LIBRARY_PATH: /home/ubuntu
        run: ./ci/build-github.sh
        shell: bash

      - uses: loiclefevre/test@v1.0.14
        #if: steps.build_guard.outputs.skip_tests == 'no'
        if: always()
        with:
          oci-service: ${{ matrix.rdbms }}
          action: delete
          user: hibernate_orm_test

      # Upload build scan data.
      # The actual publishing must be done in a separate job (see ci-report.yml).
      # We don't write to the remote cache as that would be unsafe.
      # That's even on push, because we do not trust Atlas runners to hold secrets: they are shared infrastructure.
      - name: Upload GitHub Actions artifact for the Develocity build scan
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: "${{ !cancelled() }}"
        with:
          name: build-scan-data-${{ matrix.rdbms }}
          path: ~/.gradle/build-scan-data
      - name: Upload test reports (if Gradle failed)
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: test-reports-java11-${{ matrix.rdbms }}
          path: |
            ./**/target/reports/tests/
      - name: Omit produced artifacts from build cache
        run: ./ci/before-cache.sh
